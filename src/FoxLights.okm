MODULE FoxLights;
    IMPORT OS;

    VAR running: CHAR;
        inGame: CHAR;
        window: ARRAY 36 OF CHAR;
        lightGrid: ARRAY 25 OF Fox32OSButtonWidget; (* 5x5 grid *)

    EXTERN menuItemsRoot: POINTER TO CHAR;
    EXTERN titleScreen: POINTER TO CHAR;

    PROCEDURE Main();
    VAR i: INT;
        button: POINTER TO Fox32OSButtonWidget;
    BEGIN
        running := 1;
        inGame := 0;

        (* set up button structs *)
        i := 0;
        WHILE i <| 25 DO
            button := PTROF(lightGrid[i]);

            button^.type := WIDGET_TYPE_BUTTON;
            IF i = 24 THEN button^.next := 0;
            ELSE button^.next := PTROF(lightGrid[i + 1]); END;
            button^.id := i;
            button^.text := 0;
            button^.fgColor := 0FF000000H;
            button^.bgColor := 0FFFFFFFFH;
            button^.width := 64;
            button^.height := 64;
            button^.x := ((i MOD 5) * 72) + 140;
            button^.y := ((i / 5) * 72) + 64;

            i := i + 1;
        END;

        new_window(PTROF(window), "FoxLights", 640, 448, 0, 16, PTROF(menuItemsRoot), PTROF(lightGrid));
        DrawTitleScreen();

        WHILE running DO
            GetNextWindowEvent(PTROF(window));

            (* mouse click event *)
            IF eventArgs[0] = PTROF(EVENT_TYPE_MOUSE_CLICK) THEN
                IF (eventArgs[1] <| 8) & (eventArgs[2] <| 16) THEN
                    destroy_window(PTROF(window));
                    running := 0;
                ELSIF eventArgs[2] <| 16 THEN
                    start_dragging_window(PTROF(window));
                END;
                handle_widget_click(PTROF(window), eventArgs[1], eventArgs[2]);

            (* menu bar click event *)
            ELSIF eventArgs[0] = PTROF(EVENT_TYPE_MENU_BAR_CLICK) THEN
                menu_bar_click_event(PTROF(menuItemsRoot));

            (* menu update event *)
            ELSIF eventArgs[0] = PTROF(EVENT_TYPE_MENU_UPDATE) THEN
                menu_update_event();

            (* menu click event *)
            ELSIF eventArgs[0] = PTROF(EVENT_TYPE_MENU_CLICK) THEN
                MenuClickEvent(eventArgs[2], eventArgs[3]);

            (* menu ack event *)
            ELSIF eventArgs[0] = PTROF(EVENT_TYPE_MENU_ACK) THEN
                close_menu(PTROF(menuItemsRoot));

            (* button click event *)
            ELSIF eventArgs[0] = PTROF(EVENT_TYPE_BUTTON_CLICK) THEN
                IF inGame THEN
                    InGameButtonClickEvent(eventArgs[1]);
                END;
            END;

            save_state_and_yield_task();
        END;
    END;

    PROCEDURE DrawTitleScreen();
    VAR overlay: INT;
    BEGIN
        overlay := get_window_overlay_number(PTROF(window));
        set_tilemap(PTROF(titleScreen), 640, 448);
        draw_tile_to_overlay(0, 0, 16, overlay);
        draw_str_to_overlay("use the Game menu in the upper-left corner to start a game!", 84, 316, 0FFFFFFFFH, 0FF000000H, overlay);
    END;

    PROCEDURE MenuClickEvent(rootIndex, itemIndex: INT;);
    BEGIN
        IF (rootIndex = 0) & (itemIndex = 0) THEN
            StartGame();
        END;
    END;

    PROCEDURE StartGame();
    BEGIN
        inGame := 1;
        fill_window(0FF000000H, PTROF(window));
        draw_widgets_to_window(PTROF(window));
    END;

    PROCEDURE InGameButtonClickEvent();
    BEGIN
        (* TODO *)
    END;
END.
